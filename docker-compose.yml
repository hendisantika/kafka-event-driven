services:
  postgres:
    image: postgres:16-alpine3.20
    container_name: postgres
    environment:
      - POSTGRES_DB=productDB
      - POSTGRES_USER=yuji
      - POSTGRES_PASSWORD=yuji
    volumes:
      - ./db:/var/lib/postgresql/data
    ports:
      - 5433:5432

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=yuji@yopmail.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - 80:80

  mongo:
    image: mongo:6.0.16-rc0-jammy
    ports:
      - 27017:27017

  zookeeper:
    image: 'bitnami/zookeeper:3.9.2'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: docker.io/bitnami/kafka:3.7
    ports:
      - "9092:9092"
    volumes:
      - "./kafka_data:/bitnami"
      - ./kafka/data:/bitnami/kafka
    environment:
      # KRaft settings
      #      - KAFKA_CFG_NODE_ID=0
      #      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      #      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      #      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      #      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092
      #      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      #      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      #      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT

      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper

volumes:
  kafka_data:
    driver: local

networks:
  app-tier:
    driver: bridge

  #  zookeeper:
  #    image: strimzi/kafka:0.20.1-kafka-2.6.0
  #    command: [
  #      "sh", "-c",
  #      "bin/zookeeper-server-start.sh config/zookeeper.properties"
  #    ]
  #    ports:
  #      - "2181:2181"
  #    environment:
  #      LOG_DIR: /tmp/logs
  #  kafka1:
  #    image: strimzi/kafka:0.20.1-kafka-2.6.0
  #    container_name: kafka1
  #    command: [
  #      "sh", "-c",
  #      "bin/kafka-server-start.sh config/server.properties --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT}"
  #    ]
  #    depends_on:
  #      - zookeeper
  #    ports:
  #      - "9091:9091"
  #    environment:
  #      LOG_DIR: "/tmp/logs"
  #      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9091
  #      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9091
  #      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #
  #  kafka2:
  #    image: strimzi/kafka:0.20.1-kafka-2.6.0
  #    container_name: kafka2
  #    command: [
  #      "sh", "-c",
  #      "bin/kafka-server-start.sh config/server.properties --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT}"
  #    ]
  #    depends_on:
  #      - zookeeper
  #    ports:
  #      - "9092:9092"
  #    environment:
  #      LOG_DIR: "/tmp/logs"
  #      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
  #      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
  #      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #
  #  kafka3:
  #    image: strimzi/kafka:0.20.1-kafka-2.6.0
  #    container_name: kafka3
  #    command: [
  #      "sh", "-c",
  #      "bin/kafka-server-start.sh config/server.properties --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT}"
  #    ]
  #    depends_on:
  #      - zookeeper
  #    ports:
  #      - "9093:9093"
  #    environment:
  #      LOG_DIR: "/tmp/logs"
  #      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9093
  #      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9093
  #      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#  zoo:
#    image: zookeeper:3.9.2
#    hostname: zoo
#    ports:
#      - "2181:2181"
#    environment:
#      ZOO_MY_ID: 1
#      ZOO_PORT: 2181
#      ZOO_SERVERS: server.1=zoo:2888:3888
#    volumes:
#      - ./zk-single-kafka-multiple/zoo/data:/data
#      - ./zk-single-kafka-multiple/zoo/datalog:/datalog
#
#  kafka1:
#    image: confluentinc/cp-kafka:7.6.1
#    hostname: kafka1
#    ports:
#      - "9091:9091"
#    environment:
#      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19091,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9091
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
#      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
#      KAFKA_ZOOKEEPER_CONNECT: "zoo:2181"
#      KAFKA_BROKER_ID: 1
#      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
#    volumes:
#      - ./zk-single-kafka-multiple/kafka1/data:/var/lib/kafka/data
#    depends_on:
#      - zoo
#
#  kafka2:
#    image: confluentinc/cp-kafka:7.6.1
#    hostname: kafka2
#    ports:
#      - "9092:9092"
#    environment:
#      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka2:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
#      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
#      KAFKA_ZOOKEEPER_CONNECT: "zoo:2181"
#      KAFKA_BROKER_ID: 2
#      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
#    volumes:
#      - ./zk-single-kafka-multiple/kafka2/data:/var/lib/kafka/data
#    depends_on:
#      - zoo
#
#  kafka3:
#    image: confluentinc/cp-kafka:7.6.1
#    hostname: kafka3
#    ports:
#      - "9093:9093"
#    environment:
#      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka3:19093,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9093
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
#      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
#      KAFKA_ZOOKEEPER_CONNECT: "zoo:2181"
#      KAFKA_BROKER_ID: 3
#      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
#    volumes:
#      - ./zk-single-kafka-multiple/kafka3/data:/var/lib/kafka/data
#    depends_on:
#      - zoo
#  manager:
#    image: sheepkiller/kafka-manager
#    platform: linux/amd64
#    ports:
#      - 9010:9010
#    environment:
#      - ZK_HOSTS=zoo:2181
#    depends_on:
#      - zoo
